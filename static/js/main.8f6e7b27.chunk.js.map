{"version":3,"sources":["Util.tsx","Addition.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["padZero","len","s","c","toString","length","getRandomInt","min","max","min2","Math","ceil","max2","floor","random","Addition","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","textInput","is","op1","op2","ix","counter","render","bind","assertThisInitialized","updateIs","updateI","focus","nextQuestion","i","v","nis","setState","value","target","result","prevState","split","prevProps","selectionStart","setSelectionRange","e","_this2","input_value","parseInt","join","op1Str","op2Str","overflow","slice","push","trunc","overflow2","inputs","react","className","ref","input","onInput","onFocus","op1Input","op2Input","onClick","React","App","operator","App_Adder","Adder","operators","toggleEnterState","_ref","in","+","a","b","-","*","changeOp","changeOp1","changeOp2","op","itemsOp1","itemsOp2","itemsRes","additionTab","src_Addition","tabs","Tabs","defaultActiveKey","id","Tab","eventKey","title","Boolean","window","location","hostname","match","ReactDOM","react_default","createElement","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8f6e7b27.chunk.js","sourcesContent":["export function padZero(len:number,s:any, c:any){\n    var c= c || '0';\n    var s = s.toString()\n    while(s.length<= len) s= c+ s;\n    return s;\n}\n\nexport function getRandomInt(min:number, max:number) {\n  var min2 = Math.ceil(min);\n  var max2 = Math.floor(max);\n  return Math.floor(Math.random() * (max2 - min2)) + min2; //The maximum is exclusive and the minimum is inclusive\n}\n\nexport function identityM(dim:number){\n    var rows = []\n    for(var i=0;i<dim;i++){\n        let row = Array(dim).fill(0)\n        row[i] = 1\n        rows.push(row)\n    }\n    return rows;\n}\n\nexport function matrix(x:number,y:number,fn:(i:number,j:number)=>number):any{\n    var rows = [];\n    for(var i=1;i<x+1;i++){\n        let row = []\n        for(var j=0;j<y;j++){\n            row.push(fn(i,j))\n        }\n        rows.push(row)\n    }\n    return rows\n}\n\nexport function findPrimeFactors(remainder:any){\n    var factors = [], i;\n    \n    for (i = 2; i <= remainder; i++) {\n        while ((remainder % i) === 0) {\n            factors.push(i);\n            remainder /= i;\n        }\n    }\n    \n    return factors;\n}\n\nexport default padZero;","import * as React from 'react';\nimport {getRandomInt, padZero} from './Util';\n// 120 / 10\n\nclass Addition extends React.Component {\n    public state:any;\n    public textInput: any;\n    constructor(props:any){\n        super(props);\n\tthis.textInput = \"\";\n        this.state = {is: [0,0,0,0], op1: 129, op2: 239, ix: 4, counter: 0, len: 4}\n        this.render = this.render.bind(this)\n        this.updateIs = this.updateIs.bind(this)\n        this.updateI = this.updateI.bind(this)\n        this.focus = this.focus.bind(this);\n        this.nextQuestion = this.nextQuestion.bind(this);\n    }\n\n    updateIs(i:any, v:any){\n        var nis:any = this.state.is;\n        nis[i] = v;\n        this.setState({is: nis});\n    }\n\n    updateI(v:any){\n        let counter:any = this.state.counter;\n        let value = v.target.value,\n\t    ix = this.state.ix,\n\t    result = padZero(this.state.len-1, this.state.op1 + this.state.op2, \"0\");\n\tif(value[ix-1] == result[ix-1]){\n          this.setState((prevState:any) => ({\n              is: value.split(\"\"), \n              counter: (counter+1),\n              ix: (prevState.ix -1)\n          }))\n\t} else {\n          this.setState((prevState:any) => ({\n          }))\n\t}\n\t\n    }\n    componentDidMount(){\n    \n    }\n    componentDidUpdate(prevProps:any, prevState:any){\n        var ix = this.state.ix;\n        var selection = this.textInput.selectionStart;\n\tthis.textInput.focus();\n        this.textInput.setSelectionRange(ix-1,ix);\n    }\n    focus(e:any){\n        // var len = this.state.len;\n        // this.setState({ix: len})\n        // this.textInput.setSelectionRange(len-1, len);\n    }\n    nextQuestion(){\n        let op1 = getRandomInt(0,200),\n            op2 = getRandomInt(0,200);\n        this.setState({op1: op1, op2: op2, is: [0, 0, 0, 0], ix: 4})\n    }\n    render() {\n        var props = this.props,\n            state = this.state,\n            setState = this.setState,\n            decimal_divs = [1,2],\n            op1 = this.state.op1,\n            op2 = this.state.op2,\n            is = this.state.is,\n            result = op1 + op2,\n            input_value = parseInt(this.state.is.join(\"\")),\n            len = result.toString().length,\n            op1Str = padZero(len,op1,'0'),\n            op2Str = padZero(len,op2,'0'),\n            active = 3,\n            ix = this.state.ix < 1 ? 1 : this.state.ix,\n\n\t    op1done = parseInt(op1Str.slice(ix)) || 0,\n\t    op2done = parseInt(op2Str.slice(ix)) || 0,\n\t    overflow = [];\n\t    for(var i = 0; i<=len; i++){\n\t      let op1i = parseInt(op1Str[i]),\n\t          op2i = parseInt(op2Str[i]),\n\t\t  s = op1i + op2i;\n\t      overflow.push(Math.trunc(s / 10).toString());\n\t    }\n\t    let overflow2 = overflow.slice(ix);\n\t    overflow2.push(\"0\");\n            overflow = padZero(len, overflow2.join(\"\"), '0');\n            \n        var inputs = <input \n            className={[\"add\", input_value === result ? \"correct\" : \"incorrect\"].join(\" \")} \n            ref={(input) => { this.textInput = input; }} \n            value={this.state.is.join(\"\")} onInput={this.updateI} onFocus={this.focus}/>\n\n        var op1Input = \n            <td>\n                <div className=\"digits\">{op1Str.slice(0,ix-1)}</div>\n                <div className=\"active-digit\">{op1Str.slice(ix-1,ix)}</div>\n                <div className=\"digits\">{op1Str.slice(ix)}</div>\n            </td>\n        var op2Input =            \n            <td>\n                <div className=\"digits\">{op2Str.slice(0,ix-1)}</div>\n                <div className=\"active-digit\">{op2Str.slice(ix-1,ix)}</div>\n                <div className=\"digits\">{op2Str.slice(ix)}</div>\n            </td>\n        return (\n        <div className=\"addition\" >\n            <div><button onClick={this.nextQuestion}>Next</button></div>\n            <div>{this.state.counter}</div>\n            <table>\n                <tr></tr>\n                <tr>{op1Input}</tr>\n                <tr>{op2Input}</tr>\n                <tr><td>{overflow}</td></tr>\n                <tr><td>-------</td></tr>\n                <tr><td>{inputs}</td></tr>\n            </table>\n        </div>)\n    }\n}\n\nexport default Addition;","import * as React from \"react\";\n\n//import logo from './logo.svg';\nimport './App.css';\n// import Table from './Table.tsx';\n// import Question from './Question';\nimport Addition from './Addition';\n\nimport {Tab, Tabs\n} from 'react-bootstrap';\n\n\nclass App extends React.Component {\n  constructor(props:any) {\n        super(props);\n        this.state = {\n          \"operator\": \"plus\",\n          \"op1\": 2,\n          \"op2\": 3,\n        };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Adder/>\n      </div>\n    );\n  }\n}\n\nclass Adder extends React.Component<any,any> {\n  operators: { \"+\": (a: any, b: any) => any; \"-\": (a: any, b: any) => number; \"*\": (a: any, b: any) => number; };\n  constructor(){\n    super({}, null);\n    this.operators = {\n      \"+\": function(a,b){return a+b},\n      \"-\": function(a,b){return a-b},\n      \"*\": function(a,b){return a*b}\n    }\n    this.changeOp = this.changeOp.bind(this)\n    this.changeOp1 = this.changeOp1.bind(this);\n    this.changeOp2 = this.changeOp2.bind(this);\n    this.toggleEnterState = this.toggleEnterState.bind(this);\n\n    this.state = {\"op1\": \"0\",\"op2\": \"0\", \"op\": \"+\", \"in\": false}  \n  }\n  changeOp1 (e:any) {\n    this.setState({\"op1\": (e.target.value || \"\")})\n  }\n  changeOp2 (e:any) {\n    this.setState({\"op2\": (e.target.value || \"\")})\n  }\n  changeOp(e:any){\n    this.setState({\"op\": (e.target.value)})\n  }\n\n  toggleEnterState = () => {\n    this.setState(({in: inProp}:{in:boolean}) => ({ in : !inProp }));\n  }\n\n  render () {\n  \n  var op1 = parseInt(this.state.op1,10),\n      op2 = parseInt(this.state.op2,10),\n      itemsOp1 = [],\n      itemsOp2 = [],\n      itemsRes = []\n\n  for(var i=0;i<op1;i++){\n    itemsOp1.push(\"red\")\n    itemsRes.push(\"red\")\n  }\n  for(var i=0;i<op2;i++){\n    itemsOp2.push(\"black\")\n    itemsRes.push(\"black\")\n  }\n\n  var memoryTab = <div>\n    <h1>Memory</h1>\n  </div>\n\n  // var questionTab = <div>\n  //   <h1>Question</h1>\n  //   // <Question/>\n  // </div>\n  var miniMapTab = <div></div>\n  var additionTab = <Addition/>\n\n  var tabs = <Tabs defaultActiveKey={1} id=\"uncontrolled-tab-example\">\n    <Tab eventKey={1} title=\"Addition\">{additionTab}</Tab>\n  </Tabs>\n\n  return (\n    <div> \n      {tabs}\n    </div>)}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}